m = 1000
n = 1000
mu1 = 10
mu2 = 20
sigma = 5
rn1=rep(0,m)
rn2=rep(0,n)
program1 = function(m,n,mu1,mu2,sigma){
rn1=rep(0,m)
rn2=rep(0,n)
for(i in 1:m){
sam1 = rnorm(10,mu1,sigma)
sam1 = sam1 - mean(sam1)
sam1 = sam1 * sam1
rn1[i] = sum(sam1)/sigma*sigma
}
for(i in 1:n){
sam2 = rnorm(10,mu1,sigma)
sam2 = sam2 - mean(sam2)
sam2 = sam2 * sam2
rn2[i] = sum(sam2)/sigma*sigma
}
return (data.frame(rn1,rn2))
}
df = program1(m,n,mu1,mu2,sigma)
df$sum = df$rn1 + df$rn2
hist(df$sum)
m = 1000
n = 1000
mu1 = 10
mu2 = 20
sigma = 5
rn1=rep(0,m)
rn2=rep(0,n)
program1 = function(m,n,mu1,mu2,sigma){
rn1=rep(0,m)
rn2=rep(0,n)
for(i in 1:m){
sam1 = rnorm(10,mu1,sigma)
sam1 = sam1 - mean(sam1)
sam1 = sam1 * sam1
rn1[i] = sum(sam1)/sigma*sigma
}
for(i in 1:n){
sam2 = rnorm(10,mu1,sigma)
sam2 = sam2 - mean(sam2)
sam2 = sam2 * sam2
rn2[i] = sum(sam2)/sigma*sigma
}
return (data.frame(rn1,rn2))
}
df = program1(m,n,mu1,mu2,sigma)
df$sum = df$rn1 + df$rn2
hist(df$sum)
m = 1000
n = 1000
mu1 = 10
mu2 = 20
sigma = 5
rn1=rep(0,m)
rn2=rep(0,n)
program1 = function(m,n,mu1,mu2,sigma){
rn1=rep(0,m)
rn2=rep(0,n)
for(i in 1:m){
sam1 = rnorm(10,mu1,sigma)
sam1 = sam1 - mean(sam1)
sam1 = sam1 * sam1
rn1[i] = sum(sam1)/sigma*sigma
}
for(i in 1:n){
sam2 = rnorm(10,mu1,sigma)
sam2 = sam2 - mean(sam2)
sam2 = sam2 * sam2
rn2[i] = sum(sam2)/sigma*sigma
}
return (data.frame(rn1,rn2))
}
df = program1(m,n,mu1,mu2,sigma)
df$sum = df$rn1 + df$rn2
hist(df$sum)
m = 1000
n = 1000
mu1 = 10
mu2 = 20
sigma = 5
rn1=rep(0,m)
rn2=rep(0,n)
program1 = function(m,n,mu1,mu2,sigma){
rn1=rep(0,m)
rn2=rep(0,n)
for(i in 1:m){
sam1 = rnorm(10,mu1,sigma)
sam1 = sam1 - mean(sam1)
sam1 = sam1 * sam1
rn1[i] = sum(sam1)/sigma*sigma
}
for(i in 1:n){
sam2 = rnorm(10,mu1,sigma)
sam2 = sam2 - mean(sam2)
sam2 = sam2 * sam2
rn2[i] = sum(sam2)/sigma*sigma
}
return (data.frame(rn1,rn2))
}
df = program1(m,n,mu1,mu2,sigma)
df$sum = df$rn1 + df$rn2
hist(df$sum)
m = 1000
n = 1000
mu1 = 10
mu2 = 20
sigma = 5
rn1=rep(0,m)
rn2=rep(0,n)
program1 = function(m,n,mu1,mu2,sigma){
rn1=rep(0,m)
rn2=rep(0,n)
for(i in 1:m){
sam1 = rnorm(1,mu1,sigma)
sam1 = sam1 - mean(sam1)
sam1 = sam1 * sam1
rn1[i] = sum(sam1)/sigma*sigma
}
for(i in 1:n){
sam2 = rnorm(1,mu1,sigma)
sam2 = sam2 - mean(sam2)
sam2 = sam2 * sam2
rn2[i] = sum(sam2)/sigma*sigma
}
return (data.frame(rn1,rn2))
}
df = program1(m,n,mu1,mu2,sigma)
df$sum = df$rn1 + df$rn2
hist(df$sum)
m = 1000
n = 1000
mu1 = 10
mu2 = 20
sigma = 5
rn1=rep(0,m)
rn2=rep(0,n)
program1 = function(m,n,mu1,mu2,sigma){
rn1=rep(0,m)
rn2=rep(0,n)
for(i in 1:m){
sam1 = rnorm(10,mu1,sigma)
sam1 = sam1 - mean(sam1)
sam1 = sam1 * sam1
rn1[i] = sum(sam1)/sigma*sigma
}
for(i in 1:n){
sam2 = rnorm(10,mu1,sigma)
sam2 = sam2 - mean(sam2)
sam2 = sam2 * sam2
rn2[i] = sum(sam2)/sigma*sigma
}
return (data.frame(rn1,rn2))
}
df = program1(m,n,mu1,mu2,sigma)
df$sum = df$rn1 + df$rn2
hist(df$sum)
m = 1000
n = 1000
mu1 = 10
mu2 = 20
sigma = 5
rn1=rep(0,m)
rn2=rep(0,n)
program1 = function(m,n,mu1,mu2,sigma){
rn1=rep(0,m)
rn2=rep(0,n)
for(i in 1:m){
sam1 = rnorm(10,mu1,sigma)
sam1 = sam1 - mean(sam1)
sam1 = sam1 * sam1
rn1[i] = sum(sam1)/sigma*sigma
}
for(i in 1:n){
sam2 = rnorm(10,mu1,sigma)
sam2 = sam2 - mean(sam2)
sam2 = sam2 * sam2
rn2[i] = sum(sam2)/sigma*sigma
}
return (data.frame(rn1,rn2))
}
df = program1(m,n,mu1,mu2,sigma)
df$sum = df$rn1 + df$rn2
hist(df$sum)
m = 1000
n = 1000
p1 = 0.5
p2 = 0.5
rn1=rep(0,m)
rn2=rep(0,n)
program2 = function(m,n,p1,p2){
for(i in 1:n/10){
rnorm(10,p1-p2,(p1*(1-p1)/m) + (p2*(1-p2)/n))
rn1[i] = sum(sam1)/sigma*sigma
}
return (data.frame(rn1))
}
df = program2(m,n,p1,p2)
hist(df)
m = 1000
n = 1000
p1 = 0.5
p2 = 0.5
rn1=rep(0,m)
rn2=rep(0,n)
program2 = function(m,n,p1,p2){
rn1=rnorm(m+n,p1-p2,(p1*(1-p1)/m) + (p2*(1-p2)/n))
return (data.frame(rn1))
}
df = program2(m,n,p1,p2)
hist(df)
str(df)
m = 1000
n = 1000
p1 = 0.5
p2 = 0.5
#rn1=rep(0,m)
#rn2=rep(0,n)
program2 = function(m,n,p1,p2){
rn1=rnorm(m+n,p1-p2,(p1*(1-p1)/m) + (p2*(1-p2)/n))
return (data.frame(rn1))
}
df = program2(m,n,p1,p2)
hist(df)
str(df)
str(df)
m = 1000
n = 1000
p1 = 0.5
p2 = 0.5
#rn1=rep(0,m)
#rn2=rep(0,n)
program2 = function(m,n,p1,p2){
rn1=rnorm(m+n,p1-p2,(p1*(1-p1)/m) + (p2*(1-p2)/n))
return (data.frame(rn1))
}
df = program2(m,n,p1,p2)
hist(df)
str(df)
m = 1000
n = 1000
mu1 = 10
mu2 = 20
sigma = 5
rn1=rep(0,m)
rn2=rep(0,n)
program1 = function(m,n,mu1,mu2,sigma){
rn1=rep(0,m)
rn2=rep(0,n)
for(i in 1:m){
sam1 = rnorm(10,mu1,sigma)
sam1 = sam1 - mean(sam1)
sam1 = sam1 * sam1
rn1[i] = sum(sam1)/sigma*sigma
}
for(i in 1:n){
sam2 = rnorm(10,mu1,sigma)
sam2 = sam2 - mean(sam2)
sam2 = sam2 * sam2
rn2[i] = sum(sam2)/sigma*sigma
}
return (data.frame(rn1,rn2))
}
df = program1(m,n,mu1,mu2,sigma)
df$sum = df$rn1 + df$rn2
hist(df$sum)
df$rn1
m = 1000
n = 1000
p1 = 0.8
p2 = 0.3
rn1=rep(0,m)
rn2=rep(0,n)
program1 = function(m,n,p1,p2){
rn1=rep(0,m)
rn2=rep(0,n)
for(i in 1:m){
sam1 = rnorm(10,p1,p1*(1-p1)/m)
sam1 = sam1 - mean(sam1)
rn1[i] = sum(sam1)/(p1*(1-p1)/m)
}
for(i in 1:n){
sam2 = rnorm(10,p2,p2*(1-p2)/n)
sam2 = sam2 - mean(sam2)
rn2[i] = sum(sam2)/(p1*(1-p1)/m)
}
return (data.frame(rn1,rn2))
}
df = program1(m,n,mu1,mu2,sigma)
df$sum = df$rn1 + df$rn2
hist(df$sum)
m = 1000
n = 1000
p1 = 0.8
p2 = 0.3
rn1=rep(0,m)
rn2=rep(0,n)
program1 = function(m,n,p1,p2){
rn1=rep(0,m)
rn2=rep(0,n)
for(i in 1:m){
sam1 = rnorm(10,p1,p1*(1-p1)/m)
sam1 = sam1 - mean(sam1)
rn1[i] = sum(sam1)/(p1*(1-p1)/m)
}
for(i in 1:n){
sam2 = rnorm(10,p2,p2*(1-p2)/n)
sam2 = sam2 - mean(sam2)
rn2[i] = sum(sam2)/(p1*(1-p1)/m)
}
return (data.frame(rn1,rn2))
}
df = program1(m,n,p1,p2)
df$sum = df$rn1 + df$rn2
hist(df$sum)
m = 1000
n = 1000
mu1 = 10
mu2 = 20
sigma = 5
rn1=rep(0,m)
rn2=rep(0,n)
program1 = function(m,n,mu1,mu2,sigma){
rn1=rep(0,m)
rn2=rep(0,n)
for(i in 1:m){
sam1 = rnorm(10,mu1,sigma)
sam1 = sam1 - mean(sam1)
sam1 = sam1 * sam1
rn1[i] = sum(sam1)/sigma*sigma
}
for(i in 1:n){
sam2 = rnorm(10,mu1,sigma)
sam2 = sam2 - mean(sam2)
sam2 = sam2 * sam2
rn2[i] = sum(sam2)/sigma*sigma
}
return (data.frame(rn1,rn2))
}
df = program1(m,n,mu1,mu2,sigma)
df$sum = df$rn1 + df$rn2
hist(df$sum)
m = 1000
n = 1000
p1 = 0.8
p2 = 0.3
rn1=rep(0,m)
rn2=rep(0,n)
program1 = function(m,n,p1,p2){
rn1=rep(0,m)
rn2=rep(0,n)
for(i in 1:m){
sam1 = rnorm(10,p1,p1*(1-p1)/m)
sam1 = sam1 - mean(sam1)
rn1[i] = sum(sam1)/(p1*(1-p1)/m)
}
for(i in 1:n){
sam2 = rnorm(10,p2,p2*(1-p2)/n)
sam2 = sam2 - mean(sam2)
rn2[i] = sum(sam2)/(p1*(1-p1)/m)
}
return (data.frame(rn1,rn2))
}
df = program1(m,n,p1,p2)
df$sum = df$rn1 + df$rn2
hist(df$sum)
m = 1000
n = 1000
mu1 = 10
mu2 = 20
sigma = 5
rn1=rep(0,m)
rn2=rep(0,n)
program1 = function(m,n,mu1,mu2,sigma){
rn1=rep(0,m)
rn2=rep(0,n)
for(i in 1:m){
sam1 = rnorm(10,mu1,sigma)
sam1 = sam1 - mean(sam1)
sam1 = sam1 * sam1
rn1[i] = sum(sam1)/sigma*sigma
}
for(i in 1:n){
sam2 = rnorm(10,mu1,sigma)
sam2 = sam2 - mean(sam2)
sam2 = sam2 * sam2
rn2[i] = sum(sam2)/sigma*sigma
}
return (data.frame(rn1,rn2))
}
df = program1(m,n,mu1,mu2,sigma)
df$sum = df$rn1 + df$rn2
hist(df$sum)
m = 1000
n = 1000
mu1 = 10
mu2 = 20
sigma = 5
rn1=rep(0,m)
rn2=rep(0,n)
program1 = function(m,n,mu1,mu2,sigma){
rn1=rep(0,m)
rn2=rep(0,n)
for(i in 1:m){
sam1 = rnorm(10,mu1,sigma)
sam1 = sam1 - mean(sam1)
sam1 = sam1 * sam1
rn1[i] = sum(sam1)/sigma*sigma
}
for(i in 1:n){
sam2 = rnorm(10,mu1,sigma)
sam2 = sam2 - mean(sam2)
sam2 = sam2 * sam2
rn2[i] = sum(sam2)/sigma*sigma
}
return (data.frame(rn1,rn2))
}
df = program1(m,n,mu1,mu2,sigma)
df$sum = df$rn1 + df$rn2
hist(df$sum)
m = 1000
n = 1000
p1 = 0.8
p2 = 0.3
rn1=rep(0,m)
rn2=rep(0,n)
program1 = function(m,n,p1,p2){
rn1=rep(0,m)
rn2=rep(0,n)
for(i in 1:m){
sam1 = rnorm(10,p1,p1*(1-p1)/m)
sam1 = sam1 - mean(sam1)
rn1[i] = sum(sam1)/(p1*(1-p1)/m)
}
for(i in 1:n){
sam2 = rnorm(10,p2,p2*(1-p2)/n)
sam2 = sam2 - mean(sam2)
rn2[i] = sum(sam2)/(p1*(1-p1)/m)
}
return (data.frame(rn1,rn2))
}
df = program1(m,n,p1,p2)
df$sum = df$rn1 + df$rn2
hist(df$sum)
RJSONIO
require(RJSONIO)
rnorm(100)
install.packages("stringdist");
#install.packages("stringdist");
library(stringdist)
setwd("D:/2016.2학기 소프트웨어공학/project/data");
Rdata = read.csv("all.csv", stringsAsFactors=F);
symptom = c("복통", "두통", "메스꺼움", "발열", "피로");
symptom_part = "전신";
distTable = c();
for(k in 1:nrow(Rdata)){
target = Rdata[k,-c(1,2)]
target_part = Rdata[k,1];
target = target[target != ""]
dist = rep(0, length(symptom));
for(i in 1:length(symptom)){
for(j in 1:length(target)){
temp_dist = abs(1 - stringdist(
as.character(symptom[i]),as.character(target[j])
, method="jw"))
if(dist[i] < temp_dist){
if(symptom_part == target_part){
dist[i] = temp_dist;
} else {
dist[i] = 0.9 * temp_dist;
}
}
}
}
distTable = rbind(distTable,dist);
}
colnames(distTable) = symptom;
asdf = data.frame(distTable)
rownames(asdf) = Rdata$질병;
for(i in 1:nrow(asdf)){
sum = 0;
Q_1_count = 0;
Q_2_count = 0;
Q_3_count = 0;
Q_4_count = 0;
for(j in 1:(length(asdf)-1)){
if(asdf[i,j]<0.25){
sum = sum + asdf[i,j];
Q_1_count = 0.25*Q_1_count + 1;
} else if(asdf[i,j]<0.5){
sum = sum + 0.5*asdf[i,j];
Q_2_count = Q_2_count + 1;
} else if(asdf[i,j]<0.75){
sum = sum + 0.75*asdf[i,j];
Q_3_count = Q_3_count + 1;
} else {
sum = sum + 1*asdf[i,j];
Q_4_count = Q_4_count + 1;
}
}
asdf$평균[i] = round((sum/(Q_1_count + Q_2_count + Q_3_count + Q_4_count))*100);
}
cbind(rownames(asdf[order(asdf$평균, decreasing=T),][1:5,]), asdf[order(asdf$평균, decreasing=T),][1:5,length(asdf)])
print(data.frame(3,4))
print(data.frame(3,4))
print(data.frame(3,4,5,6))
print(data.frame(3,4,5,6))
